package user

import "github.com/pocketbase/pocketbase/models"
import "cookbook/templates"
import "cookbook/templates/util"
import "strconv"

func pageName(self bool) string {
    if self {
        return "profile"
    } else {
        return "user"
    }
}

templ UserPage(user *models.Record, followers int, following int, self bool, isFollowing bool) {
    @templates.AppPage(pageName(self), user.GetString("name")) {
        <div class="m-2 card card-compact bg-base-100 shadow-xl">
            <div class="card-body">
                <div class="flex items-center">
                    @Pfp(user)
                    <div class="ml-5 w-full text-center">
                        <span class="text-2xl font-bold">{ user.GetString("name") }</span>
                        <br>
                        <span class="text-lg">{"@"}{ user.Username() }</span>
                        @followCounter(user, followers, following, false)
                    </div>
                </div>
                if user.GetString("bio") != "" {
                    <p class="mt-5">{ user.GetString("bio") }</p>
                }
                if util.IsLoggedIn(ctx) {
                    @actions(user, self, isFollowing, false)
                }
            </div>
        </div>    
    }
}

templ Pfp(user *models.Record) {
    if user.GetString("avatar") != "" {
        <div class="avatar">
            <div class="w-24 h-24 rounded-xl">
                <img x-ref="avatar" src={ util.SUrl("/user/%s/avatar", user.Username()) } />
            </div>
        </div>
    } else {
        <div class="avatar placeholder">
            <div class="bg-neutral text-neutral-content w-24 rounded-full">
                <span class="text-3xl">{ string(user.GetString("name")[0]) }</span>
            </div>
        </div>
    }
}

templ FollowResponse(user *models.Record, followers int, following int, self bool, isFollowing bool) {
    @followCounter(user, followers, following, true)
    @actions(user, self, isFollowing, true)
}

templ followCounter(user *models.Record, followers int, following int, oob bool) {
    <a href={ util.Url("/user/%s/following", user.Username()) } id="followCounter" class="flex justify-center gap-5"
    if oob {
        hx-swap-oob="true"
    }>
        <span class="text-xl font-bold">{ strconv.Itoa(followers) }<br/>Followers</span>
        <span class="text-xl font-bold">{ strconv.Itoa(following) }<br/>Following</span>
    </a>
}

templ actions(user *models.Record, self bool, isFollowing bool, oob bool) {
    <div id="actions" class="card-actions mt-5"
    if oob { 
        hx-swap-oob="true"
    }>
        if self {
            <a href="/settings" class="btn btn-outline grow">Settings</a>
        } else {
            if isFollowing {
                <button class="btn btn-outline grow" hx-post={ util.SUrl("/user/%s/unfollow", user.Username()) }>Unfollow</button>
            } else {
                <button class="btn btn-outline grow" hx-post={ util.SUrl("/user/%s/follow", user.Username()) }>Follow</button>
            }
        }
        <button class="btn btn-outline w-fit">Share</button>
    </div>
}
